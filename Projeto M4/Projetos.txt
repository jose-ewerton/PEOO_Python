Trabalhos de PEOO

1. Formulario de cadastro de produtos com interface gráfica e opções de adicionar, atualizar, deletar e 
listar os produtos (3 integrantes)

	Criar a classe Produto
		Atributos: id do produto, nome, marca, preço, lista_produtos
		Métodos: Adicionar, Listar, Atualizar e Deletar


2. Formulario de agendamento de consultas com as mesmas opções (adicionar, atualizar, deletar e listar), a 
lista deve ser apresentada por ordem de atendimento / prioridade. (3 integrantes)

	Criar a classe Consulta
		Atributos: id consulta, horário, médico, valor, lista_agendamentos
		Métodos: Adicionar, Listar (Por ondem de atendidamento), Atualizar e Deletar

3. Rede social sem chat com opção de postar, editar, listar postagens, deletar. 
(3 integrantes)

	Criar a classe Postagem
		Atributos: id postagem, horário, descrição, autor, lista_postagens
		Métodos: Adicionar, Listar, Atualizar e Deletar 

4. Formulário de cadastro de espécies por categoria, mesmas funçoes de cadastro de produtos mais, 
adicionando-os a sua categoria (3 integrantes)

	Criar a classe Especie:
		Atributos: id do animal, categoria, peso, alimentação, listar (listar por categoria, eu 
		informo a categoria e lista apenas os animais daquela categoria, listar geral seria listar
		todos...) 

5. Lista de despesas: posso colocar todas as despesas que tenho para uma semana, todas as funcionalidades 
de antes e dar prioridades as despesas mais importantes, descartar despesa paga, alterar prioridade... 
(4 pessoas)
	
	Criar a classe Despesa:
		Atributos: id despesa, descricao, valor, data_da_despesa, prioridade, lista_despesas
		Metodos:  Adicionar, deletar, listar (Geral ou por prioridade), alterar prioridade  



6 - Professor - Criar um serviço de reservas para um campo de futebol Society, onde o usuário pode marcar, 
deletar, atualizar e listar seus agendamentos


QUESTÕES SOBRE NOTAS: 50% É DAS LISTAS, 50% É DESSE PROJETO (25% PELA IMPLEMENTAÇÃO CORRETA E SEM INTERFACE
E MAIS 25% PELA INTERFACE CORRETA)

((N1*2) + (N2*2) + (N3*3) + (N4*3))/10
N1 = L1,L2
N2 = L3,L4
N3 = L5,L6
N4 = Projeto (50% rodando no terminal, 50% a interface)


Arthur, Felipe Damião e Diogo - (1)
	Tema 1
	Primeiro erro kkk foi o de mostrar um campo que não seria utilizado.
	Nota 95
Luis Miguel, Guilherme Melo, Guilherme Ferreira - (4)
	Fizaram um trabalho legal
	Quem fez o que?
	Interface meio estranha
	Erros para adicionar e listar
	Um  pouco de erros em listar
	
	Nota 70!

Pedro Lucas, Felipe Victor, Evandro (1)
	Não usou interface gráfica
	Começaram um pouco;
	A função atualizar ficou meio pela metade, mas faz!
	Nota 55!

Clara Lima, Iuri Souza, Maria Clara (2)


Maria Luiza, Bianca Jennifer, Marilia Gabriela, José Diego (2)
	Usaram PySimpleGUI
	Se preocuparam com adicões iguais;
	Parece muito um sistema funcional, massa
	Me falem sobre esse módulo
	Atualizar só funciona com nomes que já existem
	Nota 10!

Ian Guilherme, Jessica Natalia, Natasha Rodrigues (2)
	Usaram o GitHub no projeto
	Interface massa!
	Fizeram algum tratamento de dados? Alem dos medicos
	Investiram em label de imagens massa srsr
	Se a mesma pessoa tiver 2 consultas no mes...Escolher qual é a consulta de atualizar !Massa!
	isso de ficar grande tem a ver com o container pai

	100
	





Até 30/04 - Aguardando projetos e listas e fechando notas NORMAL
Entre 01/05 e 05/05 - Aguardando projetos e listas e fechando notas RECUPERAÇÂO



1-
pip install kivy
	1.1. baixa algumas bibliotcas, kivy-garden lugar onde pessoas como eu que não sou mantenedor podem 
	contribuir com widgets
	1.2. kivy garden tem recursos mais avançados

para passar funções dentro de botões (eventos)
btn = Button (on_press = on_press, on_release = on_release)

2- kv lang
Usar extensões no VS code
Linguagem de marcação similar ao html de widgets
Melhora muito a legibilidade do código python
Aqui funciona a identicação do python também

3 - Como rodar o kv...?
	Uma opção é retornar o kv dentro do main.py
	coloca o nome do arquivo entre < >
	chama o arquivo no código principal, cria uma classe que instância o kv e a instancia boxlayout 
usada no arquivo kv (como se fosse o container principal, seria interessante usar uma chave especifica), é 
chamado o widget superior/mãe/boot

4 - kivy kazam
	uma lib interessante que permite criar interfaces reenderizadas em tempo de execução;
	para usar acessar o link no git e criar um clone, ajuda a visualizar o design
	o autor é contra design que vai arrastando e criando...acho que eu também...

5 - alguns widgets
	UX widgets - Label, Button, Image
	Layouts - Float,Box,Anchor
	Complex - VideoPlayer, FileChooser
	Behavior - Scatter, Stencil
	Screen - ScreenManager

6 - Exemplo para criar e rodar um VideoPlayer
	add ffpyplayer
	VideoPlayer:
		source:'video.mp4'

7 - Exemplo CodeInput para criar editor de código:
	CodeInput:
		font_size: 50

8 - Propriedade facilitam as coisas no Kivy
	Compartilhar as mesmas propriedades entre os widgets

9 - No kv objetos entre < > referenciam elementos queestão no meu código /sendo chamados

10 - um pouco de estrutura
	<MyBox> = class MyBox(Extensão)
	Label -> text = root.meutexto = meu_texto = StringProperty('Um texto')
	Button ->on_press: root.evento() = def evento(self,btn)...

11 - Requests para web
	Uma coisa importante é fazer com que aplicativo voe
	O kivy tem um request dentro dele não bloqueante, isso significa que ele não trava o aplicativo
e vai executar em outra Thread 

existe o import do kivy




Gerenciamento de recursos das escolas municipais;

































































